import memcpy, memset, strlen, strdup, strcpy, free;
import Socket, INT_MAX from "network.ptrs";

struct Rcon
{
	socket;
	nextId;
	constructor(ip, port, password)
	{
		this.nextId = 1;
		this.socket = new Socket();
		this.socket.connect(ip, port);
		free(this.sendPackage(3, password));
	}
	destructor()
	{
		delete this.socket;
		this.socket.disconnect();
		free(this.socket);
	}

	command(cmd)
	{
		return this.sendPackage(2, cmd);
	}
	sendPackage(pkgType, payload)
	{
		var len = strlen(payload) + 10;
		var fullLen = len + 4;
		var buff[fullLen];
		buff = as<native>buff;

		memcpy(buff, &len, 4);
		memcpy(buff + 4, &(this.nextId), 4);
		memcpy(buff + 8, &pkgType, 4);
		strcpy(buff + 12, payload);
		memset(buff + fullLen - 2, 0, 2);

		this.nextId++;
		this.socket.send(buff, fullLen);

		var responseLen = 0;
		this.socket.recv(&responseLen, 4);

		var responseBuff{responseLen};
		this.socket.recv(responseBuff, responseLen);

		var id = 0;
		memcpy(&id, responseBuff, 4);

		if(id < 0 || id > INT_MAX)
			throw "Rcon error: Received id %d. Invalid password?" % id;
		else
			return as<native>strdup(responseBuff + 8);
	}
};
