import memcpy, memset, strlen, strdup, strcpy, free;
import Socket from "socket.ptrs";

struct RconPacket
{
	length : i32;
	id : i32;
	pkgType : i32;
	//payload{this.length - 2 * sizeof(u32) - sizeof(u16)}
	//padding : u16
};

struct Rcon
{
	socket;
	private nextId = 1;

	constructor(ip, port, password)
	{
		nextId = 1;
		socket = new Socket(ip, port);

		var resp = this.sendPackage(3, password);
		delete resp;
	}
	destructor()
	{
		delete socket;
	}

	command(cmd)
	{
		return this.sendPackage(2, cmd);
	}
	sendPackage(pkgType, payload)
	{
		if(typeof payload != type<native>)
			payload = cast<string>payload;

		var len = strlen(payload) + 15;
		var buff{len};

		var pkg = cast_stack<RconPacket>buff;
		pkg.length = len - sizeof(i32);
		pkg.id = nextId;
		pkg.pkgType = pkgType;

		strcpy(buff + 12, payload);
		memset(buff + len - 2, 0, 2);
		socket.send(buff, len);

		socket.recv(pkg, 12);
		if(pkg.id < 0)
			throw "Rcon error: Received id ${pkg.id}. Invalid password?";

		var respBuff = new array{pkg.length - 2 * sizeof(u32)};
		socket.recv(respBuff, sizeof respBuff);
		return respBuff;
	}
};
