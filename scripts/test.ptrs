import "free", "memset", "exit";
import "json_encode" from "../libs/json.ptrs";
import "println" from "../libs/console.ptrs";
import "Socket" from "../libs/network.ptrs";



println(42);
println(3.14159);
println("Hello world");
println(Socket);
println(println);
println();



try
{
	var buff[64];
	var sock = new Socket();
	sock.connect("m4gnus.de", 3112);

	sock.getIp(buff, true);
	println("connected to", (string)buff);
	sock.sends("Hello World\n");

	while(!sock.available(3000))
	{
		println("Aaaaand we're waiting...");
	}

	memset(buff, 0, 64);
	sock.read(buff, 63, '\n');
	println((string)buff);
	println();
}
catch(err, stack)
{
	println("Network library test failed:", err);
	println(stack);
}



struct Test
{
	foo;
	bar;
	somekey;
	someFunction()
	{
		return 42;
	}
};

var instance = new Test();
instance.foo = 1337;
instance.bar = 3.14159;
instance.somekey = "Hello World!";

println(json_encode(instance));
free(instance);
