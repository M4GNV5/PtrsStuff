import strcpy, isprint, isspace, printf;
import SocketServer, SocketSet from "../libs/socket.ptrs";

const port = 3112;
var server = new SocketServer(port);
var sockset = new SocketSet();
var broadcast;

sockset.add(server);

struct Client
{
	nick{16};
	antiSpam = 0;

	destructor()
	{
		broadcast(nick, '-', "left");
	}
};

function broadcast(nick, splitter, buff)
{
	var msg = "$%-10.10s{nick} $%c{splitter} $buff\n";
	printf("%s", msg);

	foreach(sock in sockset)
	{
		try
		{
			if(sock != server && sock.userdata.nick[0] != 0)
				sock.sends(msg);
		}
		catch(e)
		{
			printf("/!\\ %-6.6s ! %s\n", sock.userdata.nick, e);
		}
	}
}

while(true)
{
	var sock = sockset.check();
	var client = sock.userdata;

	try
	{
		if(sock == server)
		{
			sock = server.accept();

			var client = new Client();
			client.nick[0] = 0;
			sock.userdata = client;
			sockset.add(sock);

			sock.sends("Welcome to this simple chat written in PointerScript\n");
			sock.sends("You can read the source at http://bit.ly/1XaCDlz\nCurrently online: ");
			foreach(c in sockset)
			{
				if(c != server && c.userdata.nick[0] != 0)
				{
					sock.sends(c.userdata.nick);
					sock.sends(", ");
				}
			}
			sock.sends("\nType your nickname: ");
		}
		else
		{
			var buff{256};
			var splitter = ':';

			var len = sock.read(buff, 255, '\n');
			buff[len - 1] = 0;

			if(sock.closed)
			{
				sockset.remove(sock);
				delete sock.userdata;
				delete sock;
				continue;
			}

			var spaceOnly = true;
			for(var i = 0; i < len; i++)
			{
				if(!isspace(buff[i]))
				{
					spaceOnly = false;
					break;
				}
			}
			if(spaceOnly)
				continue;

			//client.antiSpam += 10;
			//if(spaceOnly || client.antiSpam > 19)
			//	continue;

			if(client.nick[0] == 0)
			{
				buff[15] = 0;
				strcpy(client.nick, buff, 16);
				strcpy(buff, "joined");
				splitter = '-';
			}
			broadcast(client.nick, splitter, buff);
		}
	}
	catch(e, trace)
	{
		printf("/!\\ %-6.6s ! %s\n%s", client ? client.nick : "?", e, trace);

		sockset.remove(sock);
		delete client;
		delete sock;
	}
}
